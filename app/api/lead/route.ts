import { NextRequest, NextResponse } from 'next/server'

export async function POST(req: NextRequest) {
  const body = await req.json()
  // sanitize incoming body to primitives
  const name = typeof body.name === 'string' ? body.name : String(body.name ?? '')
  const phone = typeof body.phone === 'string' ? body.phone : String(body.phone ?? '')
  const own = !!body.ownEquipment
  
  const lines = [
    `üîî –ù–æ–≤—ã–π –ª–∏–¥ —Å —Å–∞–π—Ç–∞ 'https://lizing-phi.vercel.app'`,
    `üë§ –ò–º—è: ${name}`,
    `üìû –¢–µ–ª: ${phone}`,
    `üöó –°–≤–æ—è —Ç–µ—Ö–Ω–∏–∫–∞: ${own ? '–¥–∞' : '–Ω–µ—Ç'}`,
   
  ]
  if (body.type) lines.push(`üõ† –¢–∏–ø: ${String(body.type)}`)
  if (body.region) lines.push(`üìç –†–µ–≥–∏–æ–Ω: ${String(body.region)}`)
  if (body.term) lines.push(`‚è± –°—Ä–æ–∫: ${String(body.term)}`)
  if (body.upfrontMode)
    lines.push(
      `üí∞ –§–æ—Ä–º–∞—Ç –∞–≤–∞–Ω—Å–∞: ${
        body.upfrontMode === 'firstpayment' ? '–ø–µ—Ä–≤—ã–π –ø–ª–∞—Ç—ë–∂' : '—Å –∞–≤–∞–Ω—Å–æ–º'
      }`
    )
  const text = lines.join('\n')

  try {
    const token = process.env.TELEGRAM_BOT_TOKEN
    const chatId = process.env.TELEGRAM_CHAT_ID
    if (token && chatId) {
      const url = `https://api.telegram.org/bot${token}/sendMessage?chat_id=${chatId}&text=${encodeURIComponent(text)}`
      await fetch(url)
    }
  } catch (e) { console.error('telegram error', e) }

  return NextResponse.json({ ok: true })
}